{"version":3,"sources":["sketches/sketch.js","UploadButton.js","Output.js","Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["sketch","p","canvasObj","setup","createCanvas","draw","mouseDragged","stroke","strokeWeight","line","mouseX","mouseY","pmouseX","pmouseY","myCustomRedrawAccordingToNewPropsHandler","props","evaluate","loadPixels","data","canvas","toDataURL","callBack","color","background","imgBase64","UploadButton","Component","constructor","super","validateFile","event","extension","target","files","name","substring","lastIndexOf","toLowerCase","img","URL","createObjectURL","file","reader","FileReader","onloadend","result","this","setState","Object","assign","state","uploadState","imgUrl","uploadError","showModal","console","log","readAsDataURL","handleClose","modalBody","Alert","variant","Image","alt","src","fluid","render","type","onChange","className","disabled","onClick","sendImgToServer","Modal","show","onHide","size","Header","closeButton","Title","Body","Footer","Button","Output","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","readOnly","placeholder","equation","formatted_equation","savedImage","Canvas","pseudo","image","replace","apiUrl","fetch","mode","method","headers","body","JSON","stringify","credentials","then","response","json","data1","parse","catch","error","onClear","onEval","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bac209c5.chunk.js","sourcesContent":["export default function sketch(p){\n    let canvasObj;\n    \n    p.setup = () => {\n        canvasObj = p.createCanvas(550, 300);\n    }\n\n    p.draw = () => {}\n\n    p.mouseDragged = () => {\n        p.stroke(0);\n        p.strokeWeight(3);\n        p.line(p.mouseX, p.mouseY, p.pmouseX, p.pmouseY);\n    }\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n        if(props.evaluate) {\n            if(canvasObj) {\n                canvasObj.loadPixels();\n                let data = canvasObj.canvas.toDataURL();\n                props.callBack(data);\n            }\n        }\n        if(props.color){\n            p.background(255);\n        }\n    }\n}","import React, { Component } from 'react';\nimport {Button,Modal,Image,Alert} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nlet imgBase64 = '';\n\nclass UploadButton extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            uploadState: true,\n            imgUrl: '',\n            uploadError: false,\n            showModal: false\n        };\n    }\n\n    validateFile = (event) => {\n        let extension = event.target.files[0].name.substring(event.target.files[0].name.lastIndexOf('.')+1).toLowerCase();\n        let img = '';\n        if(extension === 'jpg' || extension === 'png' || extension === 'jpeg'){\n            img = URL.createObjectURL(event.target.files[0]);\n            let file = event.target.files[0];\n            let reader = new FileReader();\n            reader.onloadend = () => {\n                imgBase64 = reader.result;\n                this.setState(Object.assign(this.state,{\n                    uploadState:false,\n                    imgUrl:img,\n                    uploadError: false,\n                    showModal: true\n                }));\n                console.log(this.state.imgBase64);\n                console.log('RESULT', reader.result);\n            }\n            reader.readAsDataURL(file);\n        }\n        else {\n            imgBase64 = '';\n            this.setState(Object.assign(this.state,{\n                uploadState:true,\n                imgUrl:'',\n                uploadError: true,\n                showModal: true\n            }));\n        }\n    }\n\n    handleClose = () => {\n        this.setState(Object.assign(this.state,{showModal:false}));\n    }\n\n    modalBody = () => {\n        if(!this.state.uploadError) {\n            return (\n                <div>\n                    <Image alt=\"selected image\" src={this.state.imgUrl} fluid/>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div>\n                    <Alert variant=\"danger\">\n                        The selected file is not an image. Please select an image\n                    </Alert>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div> \n                    <input type=\"file\" onChange={this.validateFile} /> \n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\" \n                        disabled={this.state.uploadState}\n                        onClick={() => this.props.sendImgToServer(imgBase64)}> \n                      Upload! \n                    </button> \n                </div>\n                <Modal \n                    show={this.state.showModal}\n                    onHide={this.handleClose}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            {this.state.uploadError? \"Error in extension\": \"Preview of selected image\"}\n                        </Modal.Title>\n                    </Modal.Header>\n                        <Modal.Body>\n                            {this.modalBody()}\n                        </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default UploadButton;","import React from 'react';\nimport {Form, Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Output (props) {\n\t// console.log(props);\n\treturn (\n\t\t<div className=\"offset-md-1\">\n\t\t\t<Form>\n\t\t\t\t<Form.Group as={Row} controlId=\"output\">\n\t\t\t\t<Form.Label column sm=\"3\">\n\t\t\t\t\tEntered Equation\n\t\t\t\t</Form.Label>\n\t\t\t\t<Col sm=\"5\">\n\t\t\t\t\t<Form.Control readOnly placeholder={props.equation} />\n\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group as={Row} controlId=\"output1\">\n\t\t\t\t<Form.Label column sm=\"3\">\n\t\t\t\t\tFormatted Equation\n\t\t\t\t</Form.Label>\n\t\t\t\t<Col sm=\"5\">\n\t\t\t\t\t<Form.Control readOnly placeholder={props.formatted_equation} />\n\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group as={Row} controlId=\"output2\">\n\t\t\t\t<Form.Label column sm=\"3\">\n\t\t\t\t\tResult\n\t\t\t\t</Form.Label>\n\t\t\t\t<Col sm=\"5\">\n\t\t\t\t\t<Form.Control readOnly placeholder={props.result} />\n\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t</div>\n\t);\n}\n\nexport default Output;","import React, {Component} from \"react\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport sketch from \"./sketches/sketch\";\nimport UploadButton from \"./UploadButton\";\nimport Output from \"./Output\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nlet savedImage = \"\";\n\nclass Canvas extends Component {\n  constructor() {\n    super();\n    this.state = {\n      color: false,\n      evaluate: false,\n      equation: \"\",\n      formatted_equation: \"\",\n      result: \"\",\n    };\n  }\n\n  pseudo = (data) => {\n    savedImage = data;\n  };\n\n  sendImgToServer = (image) => {\n    console.log(\"req:\", image);\n    let img = image.replace(\"data:image/png;base64,\", \"\");\n\n    let data = {};\n    data.image = img;\n\n    const apiUrl = \"http://\" + (\"localhost\" || \"127.0.0.1\") + \":8002\";\n    console.log(\"Sending a request to:\", apiUrl);\n    fetch(`${apiUrl}/predict`, {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n      credentials: \"same-origin\", // Include this line\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        let data1 = JSON.parse(data);\n        console.log(\"Success:\", data1);\n        this.setState({\n          color: false,\n          evaluate: false,\n          equation: data1[\"Entered_equation\"],\n          formatted_equation: data1[\"Formatted_equation\"],\n          result: data1[\"solution\"],\n        });\n        console.log(this.state);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  onClear = () => {\n    this.setState({\n      color: true,\n      evaluate: false,\n      equation: \"\",\n      formatted_equation: \"\",\n      result: \"\",\n    });\n  };\n\n  onEval = () => {\n    this.setState({\n      color: false,\n      evaluate: true,\n      equation: \"\",\n      formatted_equation: \"\",\n      result: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container \">\n        <br />\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-md-6 offset-md-2\">\n            Draw the equation below\n          </div>\n        </div>\n        <br />\n        <div className=\"row align-items-center\">\n          <div className=\"col-12 col-md-6 border border-dark offset-md-2\">\n            <P5Wrapper\n              sketch={sketch}\n              color={this.state.color}\n              evaluate={this.state.evaluate}\n              callBack={this.pseudo}\n            ></P5Wrapper>\n          </div>\n          <div className=\"col-6 col-md-2\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <button\n                  type=\"button\"\n                  onClick={\n                    this.state.evaluate\n                      ? () => this.sendImgToServer(savedImage)\n                      : this.onEval\n                  }\n                  className=\"btn btn-primary btn-block \"\n                >\n                  {this.state.evaluate ? \"Evaluate\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n            <br />\n            <div className=\"row\">\n              <div className=\"col\">\n                <button\n                  type=\"button\"\n                  onClick={this.onClear}\n                  className=\"btn btn-danger btn-block \"\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"row\">\n          <div className=\"offset-md-3\">\n            <UploadButton sendImgToServer={this.sendImgToServer} />\n          </div>\n        </div>\n        <br />\n        <br />\n        <Output\n          equation={this.state.equation}\n          formatted_equation={this.state.formatted_equation}\n          result={this.state.result}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n","import './App.css';\nimport Canvas from './Canvas';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}